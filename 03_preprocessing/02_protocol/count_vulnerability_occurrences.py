import datetime
import csv
import os
import argparse
import json

def get_vul_count(_input):
    cve_count = {}
    for filename in os.listdir(_input):
        if filename.endswith('.csv'):
            with open(os.path.join(_input, filename), 'r') as file:
                csv_reader = csv.reader(file)
                next(csv_reader)
                for row in csv_reader:
                    if len(row) >= 2:
                        vul = row[0]
                        severity = row[1]
                        if severity == 'Expecting value: line 1 column 1 (char 0)':
                            continue
                        if vul[:4] == "GHSA":
                            vul = '-'.join(vul.split("-", 4)[:4])
                        else:
                            vul = '-'.join(vul.split("-", 3)[:3])

                        if vul in cve_count:
                            cve_count[vul][0] += 1
                        else:
                            cve_count[vul] = [1, severity]

    return cve_count


def main():
    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument("-i", "--input", dest="input", default="", help="")
    parser.add_argument("-o", "--output", dest="output", default="", help="")
    parser.add_argument("-h", "--help", dest="help", default="", action="store_true", help="Help")

    args = parser.parse_args()
    _input = args.input + "/"
    output = args.output + "/"
    d = datetime.datetime.now()

    if args.help != "":
        print(_help)
        exit()

    if not os.path.exists(_input) or not os.path.isdir(_input):
        print("Path given does not exist or is not a directory")

    parts = _input.split('/')
    #print(f"-----{parts[-2]}-----")
    grype_vul_count = get_vul_count(_input)

    output_path = output + f"{d.month}-{d.day}-{d.year}-{d.hour}-{d.minute}_sbom_{parts[-2]}_vul_occurrences.json"
    with open(output_path, 'w') as json_file:
        json.dump(grype_vul_count, json_file, indent=4)
    print()




main()
